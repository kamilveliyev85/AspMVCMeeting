//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AspMVCMeeting.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MEETINGEntities : DbContext
    {
        public MEETINGEntities()
            : base("name=MEETINGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CURRENCY> CURRENCies { get; set; }
        public virtual DbSet<MEETING_FILE_CATEGORY> MEETING_FILE_CATEGORY { get; set; }
        public virtual DbSet<MEETING_FILES> MEETING_FILES { get; set; }
        public virtual DbSet<MEETING_LINES> MEETING_LINES { get; set; }
        public virtual DbSet<MEETING_LOG> MEETING_LOG { get; set; }
        public virtual DbSet<MEETING_LOG_TYPE> MEETING_LOG_TYPE { get; set; }
        public virtual DbSet<MEETING_MASTER> MEETING_MASTER { get; set; }
        public virtual DbSet<MEETING_PARTICIPANTS> MEETING_PARTICIPANTS { get; set; }
        public virtual DbSet<MEETING_PROJECTS> MEETING_PROJECTS { get; set; }
        public virtual DbSet<MEETING_STATUS> MEETING_STATUS { get; set; }
        public virtual DbSet<MEETING_TYPE> MEETING_TYPE { get; set; }
        public virtual DbSet<MEETING_TYPE_PERMISSION> MEETING_TYPE_PERMISSION { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<SAP> SAPs { get; set; }
    
        public virtual ObjectResult<SAP> GetUsersByFilter(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SAP>("GetUsersByFilter", whereParameter);
        }
    
        public virtual ObjectResult<SAP> GetUsersByFilter(string where, MergeOption mergeOption)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SAP>("GetUsersByFilter", mergeOption, whereParameter);
        }
    }
}
